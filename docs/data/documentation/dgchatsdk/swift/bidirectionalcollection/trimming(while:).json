{"abstract":[{"type":"text","text":"Returns a "},{"code":"SubSequence","type":"codeVoice"},{"type":"text","text":" formed by discarding all elements at the start and"},{"text":" ","type":"text"},{"text":"end of the collection which satisfy the given predicate.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DGChatSDK\/documentation\/DGChatSDK\/Swift\/BidirectionalCollection\/trimming(while:)"},"variants":[{"paths":["\/documentation\/dgchatsdk\/swift\/bidirectionalcollection\/trimming(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimming","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:SK11SubSequenceQa"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure which determines if the element should be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"omitted from the resulting slice."}]}],"name":"predicate"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This example uses ","type":"text"},{"type":"codeVoice","code":"trimming(while:)"},{"text":" to get a substring without the white","type":"text"},{"text":" ","type":"text"},{"text":"space at the beginning and end of the string:","type":"text"}],"type":"paragraph"},{"code":["let myString = \"  hello, world  \"","print(myString.trimming(while: \\.isWhitespace)) \/\/ \"hello, world\""],"type":"codeListing","syntax":null},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of this collection."}]}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DGChatSDK\/documentation\/DGChatSDK","doc:\/\/DGChatSDK\/documentation\/DGChatSDK\/Swift","doc:\/\/DGChatSDK\/documentation\/DGChatSDK\/Swift\/BidirectionalCollection"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"trimming(while:)","roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SK11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"modules":[{"relatedModules":["Swift"],"name":"DGChatSDK"}],"externalID":"s:SK9DGChatSDKE8trimming5while11SubSequenceQzSb7ElementQzKXE_tKF","role":"symbol"},"references":{"doc://DGChatSDK/documentation/DGChatSDK/Swift/BidirectionalCollection/trimming(while:)":{"abstract":[{"text":"Returns a ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"type":"text","text":" formed by discarding all elements at the start and"},{"text":" ","type":"text"},{"type":"text","text":"end of the collection which satisfy the given predicate."}],"identifier":"doc:\/\/DGChatSDK\/documentation\/DGChatSDK\/Swift\/BidirectionalCollection\/trimming(while:)","url":"\/documentation\/dgchatsdk\/swift\/bidirectionalcollection\/trimming(while:)","title":"trimming(while:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SK7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:SK11SubSequenceQa"}],"kind":"symbol","role":"symbol"},"doc://DGChatSDK/documentation/DGChatSDK/Swift/BidirectionalCollection":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BidirectionalCollection"}],"title":"BidirectionalCollection","role":"symbol","url":"\/documentation\/dgchatsdk\/swift\/bidirectionalcollection","identifier":"doc:\/\/DGChatSDK\/documentation\/DGChatSDK\/Swift\/BidirectionalCollection","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"BidirectionalCollection","kind":"identifier","preciseIdentifier":"s:SK"}]},"doc://DGChatSDK/documentation/DGChatSDK/Swift":{"title":"Swift","url":"\/documentation\/dgchatsdk\/swift","type":"topic","abstract":[],"identifier":"doc:\/\/DGChatSDK\/documentation\/DGChatSDK\/Swift","role":"collection","kind":"symbol"},"doc://DGChatSDK/documentation/DGChatSDK":{"role":"collection","abstract":[],"title":"DGChatSDK","url":"\/documentation\/dgchatsdk","kind":"symbol","identifier":"doc:\/\/DGChatSDK\/documentation\/DGChatSDK","type":"topic"}}}